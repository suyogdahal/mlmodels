{
        "test": {

              "hypermodel_pars":   {
              "learning_rate": {"type": "log_uniform", "init": 0.01,  "range" : [0.001, 0.1] }
             },

            "model_pars": {
                "model_uri": "model_tch.torchhub.py",
                "repo_uri": "pytorch/vision",
                "model": "resnet34",
                "num_classes": 10,
                "pretrained": 0,  "_comment": "0: False, 1: True",
                "num_layers": 1,
                "size": 6,
                "size_layer": 128,
                "output_size": 6,
                "timestep": 4,
                "epoch": 2
            },

            "data_pars" :{
                "data_info": {
                    "data_path": "dataset/vision/MNIST/",
                    "dataset":"MNIST",
                    "data_type":"tch_dataset",
                    "batch_size": 10,
                    "train": true
                },
                "preprocessors": [
				{
					"name" :  "tch_dataset_start",
                    "uri"  : "mlmodels/preprocess/generic.py::get_dataset_torch",
                    "args"  : {
                            "dataloader":"torchvision.datasets:MNIST",
                            "to_image":true,
                            "transform":    {  "uri": "mlmodels.preprocess.image:torch_transform_mnist", 
                                                "pass_data_pars": false, 
                                                "arg": {} },
                            "shuffle": true,
                            "download" : true
                            }
				}]    
            },


            "compute_pars": {
                "distributed": "mpi",
                "max_batch_sample": 5,
                "epochs": 2,
                "learning_rate": 0.001
            },
            "out_pars": {
                "checkpointdir": "ztest/model_tch/torchhub/MNIST/restnet34/checkpoints/",
                "path": "ztest/model_tch/torchhub/MNIST/restnet34/"
            }
        },
    
        "prod": {
            "model_pars": {},
            "data_pars": {}
        }
    }